stages:
  - build
  - webhook

build_image_dev:
  stage: build
  image:
    name: hub.ugm.id/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  tags:
    - putdev-runner
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
  before_script:
    - echo "{\"auths\":{\"${HARBOR_HOST}\":{\"auth\":\"$(printf "%s:%s" "${HARBOR_USERNAME}" "${HARBOR_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${HARBOR_HOST}/${HARBOR_PROJECT}/${CI_PROJECT_NAME}:stable"
      --cache
      --cache-run-layers
      --cache-copy-layers

build_image_prod:
  stage: build
  image:
    name: hub.ugm.id/kaniko-project/executor:v1.23.2-debug
    entrypoint: [""]
  tags:
    - putdev-runner
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'
  before_script:
    - echo "{\"auths\":{\"${HARBOR_HOST}\":{\"auth\":\"$(printf "%s:%s" "${HARBOR_USERNAME}" "${HARBOR_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${HARBOR_HOST}/${HARBOR_PROJECT}/${CI_PROJECT_NAME}:stable"
      --cache
      --cache-run-layers
      --cache-copy-layers

call_portainer_dev:
  image: hub.ugm.id/proxy/alpine:3.17
  stage: webhook
  tags:
    - putdev-runner
  variables:
    PORTAINER_HOOK: $HOOK_DEV
  rules:
    - if: '$CI_COMMIT_BRANCH == "develop"'
      needs: ["build_image_dev"]
  script:
    - apk add --no-cache curl
    - curl -X POST $PORTAINER_HOOK

call_portainer_prod:
  image: hub.ugm.id/proxy/alpine:3.17
  stage: webhook
  tags:
    - putdev-runner
  variables:
    PORTAINER_HOOK: $HOOK_PROD
  rules:
    - if: '$CI_COMMIT_BRANCH == "prod"'
      needs: ["build_image_prod"]
  script:
    - apk add --no-cache curl
    - curl -X POST $PORTAINER_HOOK
